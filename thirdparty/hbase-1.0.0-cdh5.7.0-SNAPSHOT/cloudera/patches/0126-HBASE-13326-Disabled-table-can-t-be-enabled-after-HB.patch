From 6bd827fa80b2bb15ae8880dc4fe0e7d145a79381 Mon Sep 17 00:00:00 2001
From: Matteo Bertozzi <matteo.bertozzi@cloudera.com>
Date: Wed, 25 Mar 2015 20:10:27 +0000
Subject: [PATCH 126/226] HBASE-13326 Disabled table can't be enabled after HBase is restarted

Reason: Bug
Author: Andrey Stepachev
Ref: CDH-26379
---
 .../hadoop/hbase/master/AssignmentManager.java     |    6 +++++
 .../master/handler/TestEnableTableHandler.java     |   22 +++++++++++++++++++-
 2 files changed, 27 insertions(+), 1 deletions(-)

diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java
index 359e8ea..8a90fdf 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java
@@ -2892,6 +2892,12 @@ public class AssignmentManager extends ZooKeeperListener {
         }
         ServerName lastHost = hrl.getServerName();
         ServerName regionLocation = RegionStateStore.getRegionServer(result, replicaId);
+        if (tableStateManager.isTableState(regionInfo.getTable(), ZooKeeperProtos.Table.State.DISABLED)) {
+          // force region to forget it hosts for disabled/disabling tables.
+          // see HBASE-13326
+          lastHost = null;
+          regionLocation = null;
+        }
         regionStates.createRegionState(regionInfo, state, regionLocation, lastHost);
         if (!regionStates.isRegionInState(regionInfo, State.OPEN)) {
           // Region is not open (either offline or in transition), skip
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/handler/TestEnableTableHandler.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/handler/TestEnableTableHandler.java
index 87b6e9b..4f97a2e 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/handler/TestEnableTableHandler.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/handler/TestEnableTableHandler.java
@@ -30,7 +30,6 @@ import org.apache.hadoop.hbase.HBaseTestingUtility;
 import org.apache.hadoop.hbase.HColumnDescriptor;
 import org.apache.hadoop.hbase.HRegionInfo;
 import org.apache.hadoop.hbase.HTableDescriptor;
-import org.apache.hadoop.hbase.MetaTableAccessor;
 import org.apache.hadoop.hbase.MiniHBaseCluster;
 import org.apache.hadoop.hbase.TableName;
 import org.apache.hadoop.hbase.client.Delete;
@@ -112,6 +111,27 @@ public class TestEnableTableHandler {
     assertEquals(tableName, onlineRegions.get(1).getTable());
   }
 
+
+  @Test(timeout = 300000)
+  public void testDisableTableAndRestart() throws Exception {
+    final TableName tableName = TableName.valueOf("testDisableTableAndRestart");
+    final MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();
+    final HBaseAdmin admin = TEST_UTIL.getHBaseAdmin();
+    final HTableDescriptor desc = new HTableDescriptor(tableName);
+    desc.addFamily(new HColumnDescriptor(FAMILYNAME));
+    admin.createTable(desc);
+    admin.disableTable(tableName);
+    TEST_UTIL.waitTableDisabled(tableName.getName());
+
+    TEST_UTIL.getHBaseCluster().shutdown();
+    TEST_UTIL.getHBaseCluster().waitUntilShutDown();
+
+    TEST_UTIL.restartHBaseCluster(2);
+
+    admin.enableTable(tableName);
+    TEST_UTIL.waitTableEnabled(tableName);
+  }
+
   /**
    * We were only clearing rows that had a hregioninfo column in hbase:meta.  Mangled rows that
    * were missing the hregioninfo because of error were being left behind messing up any
-- 
1.7.0.4

