From baecf0ab4f95a21828f509ef8ff55090d9c29e5f Mon Sep 17 00:00:00 2001
From: Sean Busbey <busbey@cloudera.com>
Date: Tue, 24 Jun 2014 18:05:47 -0700
Subject: [PATCH 210/226] HBASE-7972 allow configuring the TCP backlog on thrift services.

Author: Jean-Daniel Cryans
Ammending-Author: Esteban Gutierrez
Ammending-Author: Sean Busbey

(cherry picked from commit a2dab027f6dcb59f7c9527f15b3027232ee64abe)

Reason: Feature
Ref: CDH-29549
---
 .../hadoop/hbase/thrift/ThriftServerRunner.java    |    7 ++++++-
 .../apache/hadoop/hbase/thrift2/ThriftServer.java  |   15 ++++++++++++---
 2 files changed, 18 insertions(+), 4 deletions(-)

diff --git a/hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java b/hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java
index 8dc060f..eecc7f0 100644
--- a/hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java
+++ b/hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java
@@ -169,6 +169,7 @@ public class ThriftServerRunner implements Runnable {
    * The thrift server and the HBase cluster must run in secure mode.
    */
   static final String THRIFT_QOP_KEY = "hbase.thrift.security.qop";
+  static final String BACKLOG_CONF_KEY = "hbase.regionserver.thrift.backlog";
 
   private static final String DEFAULT_BIND_ADDR = "0.0.0.0";
   public static final int DEFAULT_LISTEN_PORT = 9090;
@@ -513,6 +514,9 @@ public class ThriftServerRunner implements Runnable {
           "-" + BIND_CONF_KEY + " not supported with " + implType);
     }
 
+    // Thrift's implementation uses '0' as a placeholder for 'use the default.'
+    int backlog = conf.getInt(BACKLOG_CONF_KEY, 0);
+
     if (implType == ImplType.HS_HA || implType == ImplType.NONBLOCKING ||
         implType == ImplType.THREADED_SELECTOR) {
 
@@ -558,7 +562,8 @@ public class ThriftServerRunner implements Runnable {
       InetAddress listenAddress = getBindAddress(conf);
 
       TServerTransport serverTransport = new TServerSocket(
-          new InetSocketAddress(listenAddress, listenPort));
+          new TServerSocket.ServerSocketTransportArgs().
+              bindAddr(new InetSocketAddress(listenAddress, listenPort)).backlog(backlog));
 
       TBoundedThreadPoolServer.Args serverArgs =
           new TBoundedThreadPoolServer.Args(serverTransport, conf);
diff --git a/hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift2/ThriftServer.java b/hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift2/ThriftServer.java
index 66ecc18..9430503 100644
--- a/hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift2/ThriftServer.java
+++ b/hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift2/ThriftServer.java
@@ -105,6 +105,8 @@ public class ThriftServer {
    */
   static final String THRIFT_QOP_KEY = "hbase.thrift.security.qop";
 
+  static final String BACKLOG_CONF_KEY = "hbase.regionserver.thrift.backlog";
+
   public static final int DEFAULT_LISTEN_PORT = 9090;
 
 
@@ -269,9 +271,12 @@ public class ThriftServer {
                                               TProcessor processor,
                                               TTransportFactory transportFactory,
                                               int workerThreads,
-                                              InetSocketAddress inetSocketAddress)
+                                              InetSocketAddress inetSocketAddress,
+                                              int backlog)
       throws TTransportException {
-    TServerTransport serverTransport = new TServerSocket(inetSocketAddress);
+    TServerTransport serverTransport = new TServerSocket(
+                                           new TServerSocket.ServerSocketTransportArgs().
+                                               bindAddr(inetSocketAddress).backlog(backlog));
     log.info("starting HBase ThreadPool Thrift server on " + inetSocketAddress.toString());
     TThreadPoolServer.Args serverArgs = new TThreadPoolServer.Args(serverTransport);
     serverArgs.processor(processor);
@@ -345,6 +350,9 @@ public class ThriftServer {
       throw new RuntimeException("Could not parse the value provided for the port option", e);
     }
 
+    // Thrift's implementation uses '0' as a placeholder for 'use the default.'
+    int backlog = conf.getInt(BACKLOG_CONF_KEY, 0);
+
     // Local hostname and user name,
     // used only if QOP is configured.
     String host = null;
@@ -473,7 +481,8 @@ public class ThriftServer {
           processor,
           transportFactory,
           workerThreads,
-          inetSocketAddress);
+          inetSocketAddress,
+          backlog);
     }
 
     final TServer tserver = server;
-- 
1.7.0.4

