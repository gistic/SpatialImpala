From caa9114b0241936d76e1dc50c33ddb609046532a Mon Sep 17 00:00:00 2001
From: Esteban Gutierrez <esteban@cloudera.com>
Date: Thu, 4 Jun 2015 23:20:39 -0700
Subject: [PATCH 162/226] CLOUDERA-BUILD Usage of deprecated memstore upperLimit and lowerLimit properties should precede newer memstore configuration properties

Author: Esteban Gutierrez
Reason: Backward compatibility
Ref: CDH-28002
---
 hbase-common/src/main/resources/hbase-default.xml |   16 ++++++++++------
 1 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/hbase-common/src/main/resources/hbase-default.xml b/hbase-common/src/main/resources/hbase-default.xml
index c7f04cd..8e7897d 100644
--- a/hbase-common/src/main/resources/hbase-default.xml
+++ b/hbase-common/src/main/resources/hbase-default.xml
@@ -282,19 +282,23 @@ possible configurations would overwhelm and obscure the important.
   </property>
   <property>
     <name>hbase.regionserver.global.memstore.size</name>
-    <value>0.4</value>
+    <value></value>
     <description>Maximum size of all memstores in a region server before new
-      updates are blocked and flushes are forced. Defaults to 40% of heap.
+      updates are blocked and flushes are forced. Defaults to 40% of heap (0.4).
       Updates are blocked and flushes are forced until size of all memstores
-      in a region server hits hbase.regionserver.global.memstore.size.lower.limit.</description>
+      in a region server hits hbase.regionserver.global.memstore.size.lower.limit.
+      The default value in this configuration has been intentionally left emtpy in order to
+      honor the old hbase.regionserver.global.memstore.upperLimit property if present.</description>
   </property>
   <property>
     <name>hbase.regionserver.global.memstore.size.lower.limit</name>
-    <value>0.95</value>
+    <value></value>
     <description>Maximum size of all memstores in a region server before flushes are forced.
-      Defaults to 95% of hbase.regionserver.global.memstore.size.
+      Defaults to 95% of hbase.regionserver.global.memstore.size (0.95).
       A 100% value for this value causes the minimum possible flushing to occur when updates are 
-      blocked due to memstore limiting.</description>
+      blocked due to memstore limiting.
+      The default value in this configuration has been intentionally left emtpy in order to
+      honor the old hbase.regionserver.global.memstore.lowerLimit property if present.</description>
   </property>
   <property>
     <name>hbase.regionserver.optionalcacheflushinterval</name>
-- 
1.7.0.4

