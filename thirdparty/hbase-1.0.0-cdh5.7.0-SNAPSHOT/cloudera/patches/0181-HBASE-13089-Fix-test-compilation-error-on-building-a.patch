From 59f6713ba02bd338230473b1ec6de10c24f69436 Mon Sep 17 00:00:00 2001
From: Esteban Gutierrez <esteban@apache.org>
Date: Fri, 24 Jul 2015 15:34:40 -0700
Subject: [PATCH 181/226] HBASE-13089 Fix test compilation error on building against htrace-3.2.0-incubating

Reason: Compatibility
Author: Esteban Gutierrez
Ref: CDH-29817
---
 .../apache/hadoop/hbase/trace/TestHTraceHooks.java |   15 +++++++++++++--
 1 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/trace/TestHTraceHooks.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/trace/TestHTraceHooks.java
index eba30a8..eeda043 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/trace/TestHTraceHooks.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/trace/TestHTraceHooks.java
@@ -21,6 +21,7 @@ import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertTrue;
 
+import java.lang.reflect.Method;
 import java.util.Collection;
 
 import org.apache.hadoop.hbase.HBaseTestingUtility;
@@ -48,9 +49,19 @@ public class TestHTraceHooks {
   private static final byte[] FAMILY_BYTES = "family".getBytes();
   private static final HBaseTestingUtility TEST_UTIL = new HBaseTestingUtility();
   private static POJOSpanReceiver rcvr;
+  private static long ROOT_SPAN_ID = 0;
 
   @BeforeClass
   public static void before() throws Exception {
+
+    // Find out what the right value to use fo SPAN_ROOT_ID after HTRACE-111. We use HTRACE-32
+    // to find out to detect if we are using HTrace 3.2 or not.
+    try {
+        Method m = Span.class.getMethod("addKVAnnotation", String.class, String.class);
+    } catch (NoSuchMethodException e) {
+      ROOT_SPAN_ID = 0x74aceL; // Span.SPAN_ROOT_ID pre HTrace-3.2
+    }
+
     TEST_UTIL.startMiniCluster(2, 3);
     rcvr = new POJOSpanReceiver(new HBaseHTraceConfiguration(TEST_UTIL.getConfiguration()));
     Trace.addReceiver(rcvr);
@@ -86,7 +97,7 @@ public class TestHTraceHooks {
 
     Collection<Span> spans = rcvr.getSpans();
     TraceTree traceTree = new TraceTree(spans);
-    Collection<Span> roots = traceTree.getSpansByParent().find(Span.ROOT_SPAN_ID);
+    Collection<Span> roots = traceTree.getSpansByParent().find(ROOT_SPAN_ID);
 
     assertEquals(1, roots.size());
     Span createTableRoot = roots.iterator().next();
@@ -117,7 +128,7 @@ public class TestHTraceHooks {
 
     spans = rcvr.getSpans();
     traceTree = new TraceTree(spans);
-    roots = traceTree.getSpansByParent().find(Span.ROOT_SPAN_ID);
+    roots = traceTree.getSpansByParent().find(ROOT_SPAN_ID);
 
     assertEquals(2, roots.size());
     Span putRoot = null;
-- 
1.7.0.4

