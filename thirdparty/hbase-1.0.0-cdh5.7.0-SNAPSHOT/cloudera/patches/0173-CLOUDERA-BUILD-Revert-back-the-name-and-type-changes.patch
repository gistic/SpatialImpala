From 3d6f5186204cd54e0ecc640838779687b7ed21cd Mon Sep 17 00:00:00 2001
From: Srikanth Srungarapu <ssrungarapu@cloudera.com>
Date: Tue, 14 Jul 2015 20:58:31 -0700
Subject: [PATCH 173/226] CLOUDERA-BUILD Revert back the name and type changes block cache hit percentage that broke operational compatibility

Reason: Backward Compatibility
Author: Srikanth Srungarapu
Ref: CDH-29488
---
 .../regionserver/MetricsRegionServerSource.java    |    3 +++
 .../regionserver/MetricsRegionServerWrapper.java   |    5 +++++
 .../MetricsRegionServerSourceImpl.java             |    2 ++
 .../MetricsRegionServerWrapperImpl.java            |    8 ++++++++
 .../MetricsRegionServerWrapperStub.java            |    5 +++++
 .../regionserver/TestMetricsRegionServer.java      |    1 +
 6 files changed, 24 insertions(+), 0 deletions(-)

diff --git a/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSource.java b/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSource.java
index 81ccff0..36b9e19 100644
--- a/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSource.java
+++ b/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSource.java
@@ -203,6 +203,9 @@ public interface MetricsRegionServerSource extends BaseSource {
   String BLOCK_CACHE_EVICTION_COUNT = "blockCacheEvictionCount";
   String BLOCK_CACHE_EVICTION_COUNT_DESC =
       "Count of the number of blocks evicted from the block cache.";
+  String BLOCK_COUNT_HIT_PERCENT = "blockCountHitPercent";
+  String BLOCK_COUNT_HIT_PERCENT_DESC =
+      "Percent of block cache requests that are hits";
   String BLOCK_CACHE_HIT_PERCENT = "blockCacheCountHitPercent";
   String BLOCK_CACHE_HIT_PERCENT_DESC =
       "Percent of block cache requests that are hits";
diff --git a/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper.java b/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper.java
index 9f8a945..58aaa88 100644
--- a/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper.java
+++ b/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper.java
@@ -208,6 +208,11 @@ public interface MetricsRegionServerWrapper {
   double getBlockCacheHitPercent();
 
   /**
+   * Get the percent of all requests that hit the block cache.
+   */
+  int getBlockHitPercent();
+
+  /**
    * Get the percent of requests with the block cache turned on that hit the block cache.
    */
   int getBlockCacheHitCachingPercent();
diff --git a/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSourceImpl.java b/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSourceImpl.java
index f74ec06..00424be 100644
--- a/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSourceImpl.java
+++ b/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSourceImpl.java
@@ -233,6 +233,8 @@ public class MetricsRegionServerSourceImpl
               rsWrap.getBlockCacheEvictedCount())
           .addGauge(Interns.info(BLOCK_CACHE_HIT_PERCENT, BLOCK_CACHE_HIT_PERCENT_DESC),
               rsWrap.getBlockCacheHitPercent())
+          .addGauge(Interns.info(BLOCK_COUNT_HIT_PERCENT, BLOCK_COUNT_HIT_PERCENT_DESC),
+              rsWrap.getBlockHitPercent())
           .addGauge(Interns.info(BLOCK_CACHE_EXPRESS_HIT_PERCENT,
               BLOCK_CACHE_EXPRESS_HIT_PERCENT_DESC), rsWrap.getBlockCacheHitCachingPercent())
           .addCounter(Interns.info(UPDATES_BLOCKED_TIME, UPDATES_BLOCKED_DESC),
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapperImpl.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapperImpl.java
index 8ca644b..71d5764 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapperImpl.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapperImpl.java
@@ -307,6 +307,14 @@ class MetricsRegionServerWrapperImpl
   }
 
   @Override
+  public int getBlockHitPercent() {
+    if (this.cacheStats == null) {
+      return 0;
+    }
+    return (int) (this.cacheStats.getHitRatio() * 100);
+  }
+
+  @Override
   public int getBlockCacheHitCachingPercent() {
     if (this.cacheStats == null) {
       return 0;
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapperStub.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapperStub.java
index d73c846..2e5c392 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapperStub.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapperStub.java
@@ -186,6 +186,11 @@ public class MetricsRegionServerWrapperStub implements MetricsRegionServerWrappe
   }
 
   @Override
+  public int getBlockHitPercent() {
+    return 98;
+  }
+
+  @Override
   public int getBlockCacheHitCachingPercent() {
     return 97;
   }
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMetricsRegionServer.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMetricsRegionServer.java
index d5beed8..e830194 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMetricsRegionServer.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMetricsRegionServer.java
@@ -84,6 +84,7 @@ public class TestMetricsRegionServer {
     HELPER.assertCounter("blockCacheMissCount", 417, serverSource);
     HELPER.assertCounter("blockCacheEvictionCount", 418, serverSource);
     HELPER.assertGauge("blockCacheCountHitPercent", 98, serverSource);
+    HELPER.assertGauge("blockCountHitPercent", 98, serverSource);
     HELPER.assertGauge("blockCacheExpressHitPercent", 97, serverSource);
     HELPER.assertCounter("updatesBlockedTime", 419, serverSource);
   }
-- 
1.7.0.4

