From 0ba3b313fa93384a383fb9ea32bfc30410e71cb1 Mon Sep 17 00:00:00 2001
From: casey <casey@cloudera.com>
Date: Thu, 26 Feb 2015 13:29:35 -0800
Subject: [PATCH] Shell: Fix parsing of strings containing an escaped backslash

Upgrading sqlparse ended up trading one bug for another. The new bug is
not fixed upstream, I sent a patch. The problem is '\\' is not
considered a terminated string and we use this in the phrase "fields
escaped by '\\'" when creating tables.

Change-Id: Id57081f5a96e997afd3aa9b26dca23f627488fc3
---
 shell/ext-py/sqlparse-0.1.14/sqlparse/lexer.py   | 3 +--
 shell/ext-py/sqlparse-0.1.14/tests/test_split.py | 4 ++++
 2 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/shell/ext-py/sqlparse-0.1.14/sqlparse/lexer.py b/shell/ext-py/sqlparse-0.1.14/sqlparse/lexer.py
index 6bd414f..b7a33ff 100644
--- a/shell/ext-py/sqlparse-0.1.14/sqlparse/lexer.py
+++ b/shell/ext-py/sqlparse-0.1.14/sqlparse/lexer.py
@@ -191,8 +191,7 @@ class Lexer(object):
             (r'[-]?[0-9]*(\.[0-9]+)?[eE][-]?[0-9]+', tokens.Number.Float),
             (r'[-]?[0-9]*\.[0-9]+', tokens.Number.Float),
             (r'[-]?[0-9]+', tokens.Number.Integer),
-            # TODO: Backslash escapes?
-            (r"'(''|\\'|[^'])*'", tokens.String.Single),
+            (r"'(''|\\\\|\\'|[^'])*'", tokens.String.Single),
             # not a real string literal in ANSI SQL:
             (r'(""|".*?[^\\]")', tokens.String.Symbol),
             (r'(\[.*[^\]]\])', tokens.Name),
diff --git a/shell/ext-py/sqlparse-0.1.14/tests/test_split.py b/shell/ext-py/sqlparse-0.1.14/tests/test_split.py
index e4ebf7e..54e8d04 100644
--- a/shell/ext-py/sqlparse-0.1.14/tests/test_split.py
+++ b/shell/ext-py/sqlparse-0.1.14/tests/test_split.py
@@ -22,6 +22,10 @@ class SQLSplitTest(TestCaseBase):
         self.ndiffAssertEqual(unicode(stmts[0]), self._sql1)
         self.ndiffAssertEqual(unicode(stmts[1]), sql2)
 
+    def test_split_backslash(self):
+        stmts = sqlparse.parse(r"select '\\'; select '\''; select '\\\'';")
+        self.assertEqual(len(stmts), 3)
+
     def test_create_function(self):
         sql = load_file('function.sql')
         stmts = sqlparse.parse(sql)
-- 
2.2.1

