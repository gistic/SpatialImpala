// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gutil/proto/types.proto

#ifndef PROTOBUF_gutil_2fproto_2ftypes_2eproto__INCLUDED
#define PROTOBUF_gutil_2fproto_2ftypes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace common {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gutil_2fproto_2ftypes_2eproto();
void protobuf_AssignDesc_gutil_2fproto_2ftypes_2eproto();
void protobuf_ShutdownFile_gutil_2fproto_2ftypes_2eproto();


enum DataType {
  INT32 = 1,
  INT64 = 2,
  UINT32 = 8,
  UINT64 = 3,
  FLOAT = 9,
  DOUBLE = 5,
  BOOL = 6,
  DATE = 10,
  DATETIME = 4,
  STRING = 0,
  BINARY = 7,
  DATA_TYPE = 11,
  NULL_TYPE = 12
};
bool DataType_IsValid(int value);
const DataType DataType_MIN = STRING;
const DataType DataType_MAX = NULL_TYPE;
const int DataType_ARRAYSIZE = DataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataType_descriptor();
inline const ::std::string& DataType_Name(DataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataType_descriptor(), value);
}
inline bool DataType_Parse(
    const ::std::string& name, DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataType>(
    DataType_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace common

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< common::DataType>() {
  return common::DataType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gutil_2fproto_2ftypes_2eproto__INCLUDED
